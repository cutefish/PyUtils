#!/usr/bin/python

import sys
sys.dont_write_bytecode=True
import imp
import os
import pyutils.common.reflectutils as ru

#search available packages
if os.environ['PYUTILSHOME'] == None:
    print 'PyUtils not properly set up, please run setup.py again'
    sys.exit(-1)

pkgDir = os.environ['PYUTILSHOME'] + '/pyutils'

null, pkgPath, desc = imp.find_module('pyutils')
pyutils = imp.load_module('pyutils', null, pkgPath, desc)

availableModules = []
for path in os.listdir(pkgDir):
    try:
        fileObj, pathname, desc = imp.find_module(path, pyutils.__path__)
        availableModules.append(path)
    except ImportError:
        pass

def printUsage():
    print "pyutils <module name> [module args]"
    print "available modules: ", availableModules

if len(sys.argv) < 2:
    printUsage()
    sys.exit(-1)

try:
    m = ru.importModule(sys.argv[1], pyutils)
except ImportError as ie:
    print "Error importing module: " + ie.args[0]
    sys.exit(-1)

try:
    m.main()
except AttributeError:
    print "Module <%s> did not define a main function" %m.__name__
    sys.exit(-1)
